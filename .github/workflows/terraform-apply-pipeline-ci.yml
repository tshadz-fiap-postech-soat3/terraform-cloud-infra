name: Terraform Apply

on:
  workflow_call:

env:
  TF_VAR_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_VAR_WORKSPACE: "${{secrets.IMAGE_NAME}}"
  CONFIG_DIRECTORY: "./"
  TF_VAR_CLOUD_REGION: "${{secrets.CLOUD_REGION}}"
  TF_VAR_MYSQL_USER: "${{secrets.MYSQL_USER}}"
  TF_VAR_MYSQL_PASSWORD: "${{secrets.MYSQL_PASSWORD}}"
  TF_VAR_MYSQL_DATABASE: "${{secrets.MYSQL_DATABASE}}"
  TF_VAR_CLOUD_INSTANCE: "${{secrets.CLOUD_INSTANCE}}"
  TF_VAR_DB_TIER: "${{secrets.DB_TIER}}"
  TF_VAR_DB_REGION: "${{secrets.DB_REGION}}"
  TF_VAR_CREDENTIALS: "${{secrets.GCP_CREDENTIALS}}"
  TF_VAR_GCP_ID: "${{secrets.GCP_ID}}"
  TF_VAR_IMAGE_NAME: "${{secrets.IMAGE_NAME}}"
  TF_VAR_TAG: "${{github.sha}}"

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: tshadz-fiap-postech-soat3/terraform-cloud-infra
          path: terraform
          ref: main

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          # terraform_version: 1.4.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./terraform

      - name: Set Terraform Workspace
        working-directory: ./terraform
        run: |
          chmod +x set_workspace.sh
          ./set_workspace.sh

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        working-directory: ./terraform
        continue-on-error: false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.event_name == 'pull_request'
        working-directory: ./terraform
        run: terraform apply -auto-approve -input=false
